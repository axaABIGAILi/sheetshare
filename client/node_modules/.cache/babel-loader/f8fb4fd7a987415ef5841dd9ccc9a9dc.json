{"ast":null,"code":"var _jsxFileName = \"/Users/joshuagrossman/bootcamp/sheetshare/client/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { storage } from '../firebase';\nimport { getPosts, savePosts, deletePost, allPosts } from \"../actions/postAction\";\nimport PostCard from \"./PostCard\";\nimport { getUser } from \"../actions/userAction\";\nimport SubmitForm from \"./SubmitForm\";\nimport Container from \"@material-ui/core/Container\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); //bind\n\n    this.renderPosts = this.renderPosts.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  } //lifecycle methods\n\n\n  componentDidMount() {\n    this.props.getPosts();\n    this.props.getPosts();\n    this.props.getUser();\n  }\n\n  handleDelete(id) {\n    this.props.deletePost(id);\n    this.props.getPosts();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  uploadFile() {\n    const file = this.state.file;\n    console.log(\"Uploading\", file);\n    const storageRef = storage.ref(\"sheets/\" + file.name); //upload file\n\n    const task = storageRef.put(file); //update progress\n\n    const self = this;\n    task.on(\"state_changed\", function progress(snapshot) {\n      const percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(\"Percentage\", percentage);\n      self.setState({\n        progress: percentage\n      });\n    }, function error(err) {\n      console.log(\"File upload error\", err);\n    }, function complete() {\n      console.log(\"File upload complere\");\n    });\n  } //handle submit\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.uploadFile();\n    const post = {\n      title: this.state.title,\n      blurb: this.state.blurb,\n      instrument: this.state.instrument,\n      genre: this.state.genre\n    };\n    console.log(post);\n    this.props.savePosts(post);\n    this.props.getPosts();\n    this.setState({\n      title: \"\",\n      blurb: \"\",\n      instrument: \"\",\n      genre: \"\"\n    });\n  } //render posts\n\n\n  renderPosts() {\n    console.log(this.props.posts);\n    return _.map(this.props.posts, (post, key) => {\n      return React.createElement(PostCard, {\n        key: key,\n        title: post.title,\n        link: post.link,\n        instrument: post.instrument,\n        genre: post.genre,\n        blurb: post.blurb,\n        onClick: () => this.handleDelete(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.user != null ? React.createElement(SubmitForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : null, this.props.user != null ? this.renderPosts() : null);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  allPosts,\n  getPosts,\n  savePosts,\n  deletePost,\n  getUser\n})(App);","map":{"version":3,"sources":["/Users/joshuagrossman/bootcamp/sheetshare/client/src/components/App.js"],"names":["React","Component","_","connect","storage","getPosts","savePosts","deletePost","allPosts","PostCard","getUser","SubmitForm","Container","App","constructor","props","renderPosts","bind","handleDelete","componentDidMount","id","handleChange","e","setState","target","name","value","uploadFile","file","state","console","log","storageRef","ref","task","put","self","on","progress","snapshot","percentage","bytesTransferred","totalBytes","error","err","complete","handleSubmit","preventDefault","post","title","blurb","instrument","genre","posts","map","key","link","render","user","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { storage } from '../firebase';\nimport {\n  getPosts,\n  savePosts,\n  deletePost,\n  allPosts\n} from \"../actions/postAction\";\nimport PostCard from \"./PostCard\";\nimport { getUser } from \"../actions/userAction\";\nimport SubmitForm from \"./SubmitForm\";\nimport Container from \"@material-ui/core/Container\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    //bind\n    this.renderPosts = this.renderPosts.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  //lifecycle methods\n  componentDidMount() {\n    this.props.getPosts();\n    this.props.getPosts();\n    this.props.getUser();  }\n  \n  handleDelete(id) {\n    this.props.deletePost(id);\n    this.props.getPosts();\n  }\n\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  uploadFile() {\n    const { file } = this.state;\n    console.log(\"Uploading\", file);\n    const storageRef = storage.ref(\"sheets/\" + file.name);\n\n    //upload file\n    const task = storageRef.put(file);\n\n    //update progress\n    const self = this;\n    task.on(\n      \"state_changed\",\n      function progress(snapshot) {\n        const percentage =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Percentage\", percentage);\n        self.setState({ progress: percentage });\n      },\n      function error(err) {\n        console.log(\"File upload error\", err);\n      },\n\n      function complete() {\n        console.log(\"File upload complere\");\n      }\n    );\n  }\n  //handle submit\n  handleSubmit(e) {\n    e.preventDefault();\n    this.uploadFile();\n    const post = {\n      title: this.state.title,\n      blurb: this.state.blurb,\n      instrument: this.state.instrument,\n      genre: this.state.genre\n    };\n\n    console.log(post);\n    this.props.savePosts(post);\n    this.props.getPosts();\n    this.setState({\n      title: \"\",\n      blurb: \"\",\n      instrument: \"\",\n      genre: \"\"\n    });\n  }\n\n  //render posts\n  renderPosts() {\n    console.log(this.props.posts);\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <PostCard\n          key={key}\n          title={post.title}\n          link={post.link}\n          instrument={post.instrument}\n          genre={post.genre}\n          blurb={post.blurb}\n          onClick={() => this.handleDelete(key)}\n        ></PostCard>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"sm\">\n        {this.props.user != null ? <SubmitForm /> : null}\n        {this.props.user != null ? this.renderPosts() : null}\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { allPosts, getPosts, savePosts, deletePost, getUser }\n)(App);\n"]},"metadata":{},"sourceType":"module"}